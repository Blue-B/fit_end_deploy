{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\root\\\\Documents\\\\GitHub\\\\fit-end-main\\\\fit_end_deploy_2\\\\react\\\\src\\\\Component\\\\MealTimingselect.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport 'react-calendar/dist/Calendar.css';\nimport \"../Style/MealTimingselect.css\";\nimport config from \"../config\";\nimport fetchHelper from \"../utils/fetchHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MealTimingselect() {\n  _s();\n  //location.state에서 날짜를 받아 사용\n  const location = useLocation();\n  const {\n    selectedDate = new Date().toISOString().split(\"T\")[0]\n  } = location.state || {};\n  const navigate = useNavigate();\n  const [userid, setUserid] = useState(\"\");\n  const [mealData, setMealData] = useState([]); // 식사 데이터 저장\n  const [availableDates, setAvailableDates] = useState([]); // 기록이 있는 날짜 목록\n  const mealTypes = [\"moning\", \"lunch\", \"dinner\", \"desset\"]; // 아침, 점심, 저녁\n\n  // 📅 날짜 포맷 변환 함수 (한국 시간 기준)\n  const formatDate = date => {\n    return new Date(date.getTime() - date.getTimezoneOffset() * 60000).toISOString().split(\"T\")[0];\n  };\n  const navigateMain = () => {\n    navigate(\"/main\");\n  };\n  const navigateToRecordBody = () => {\n    navigate(\"/recordbody\");\n  };\n  const navigateFood = () => {\n    navigate(\"/Calender\");\n  };\n  const navigateGraph = () => {\n    navigate(\"/Graph\");\n  };\n  const navigateFoodSearchR = () => {\n    navigate(\"/FoodSearchR\");\n  };\n  const navigateCalender = () => {\n    navigate(\"/todo\");\n  };\n  const handleLogout = async () => {\n    const response = await fetchHelper(`http://${config.SERVER_URL}/login/logout`, {\n      method: \"POST\",\n      credentials: \"include\"\n    });\n    if (response === \"network-error\") {\n      navigate(\"/error/500\");\n    } else if (response === 404) {\n      navigate(\"/error/404\");\n    } else if (response === 500) {\n      navigate(\"/error/500\");\n    } else if (response === 503) {\n      navigate(\"/error/503\");\n    } else {\n      sessionStorage.removeItem(\"userid\");\n      navigate(\"/login\");\n    }\n  };\n  const handleMealSelection = mealType => {\n    navigate(\"/FoodSearchR\", {\n      state: {\n        selectedDate,\n        mealType\n      }\n    });\n  };\n  useEffect(() => {\n    fetchHelper(`http://${config.SERVER_URL}/login/validate`, {\n      method: \"GET\",\n      credentials: \"include\"\n    }).then(response => {\n      if (response === \"network-error\") {\n        navigate(\"/error/500\");\n        throw new Error(\"Network error\");\n      } else if (response === 404) {\n        navigate(\"/error/404\");\n        throw new Error(\"404 Not Found\");\n      } else if (response === 500) {\n        navigate(\"/error/500\");\n        throw new Error(\"500 Internal Server Error\");\n      } else if (response === 503) {\n        navigate(\"/error/503\");\n        throw new Error(\"503 Service Unavailable\");\n      }\n      if (!response.ok) throw new Error(\"Unauthorized\");\n      return response.json();\n    }).then(data => {\n      console.log(\"로그인 상태 확인 성공:\", data);\n      setUserid(data.userid);\n      return fetchHelper(`http://${config.SERVER_URL}/food/diet-records/${data.userid}`, {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    }).then(response => {\n      if (response === \"network-error\") {\n        navigate(\"/error/500\");\n        throw new Error(\"Network error\");\n      } else if (response === 404) {\n        navigate(\"/error/404\");\n        throw new Error(\"404 Not Found\");\n      } else if (response === 500) {\n        navigate(\"/error/500\");\n        throw new Error(\"500 Internal Server Error\");\n      } else if (response === 503) {\n        navigate(\"/error/503\");\n        throw new Error(\"503 Service Unavailable\");\n      }\n      return response.json();\n    }).then(data => {\n      setMealData(data);\n      const dates = [...new Set(data.map(record => formatDate(new Date(record.timestamp))))].sort((a, b) => new Date(b) - new Date(a));\n      setAvailableDates(dates);\n      const defaultDate = dates[0] ? new Date(dates[0]) : new Date();\n    }).catch(error => {\n      console.warn(\"⚠️ 인증 실패 또는 데이터 불러오기 실패:\", error);\n      navigate(\"/login\");\n    });\n  }, [navigate]);\n\n  // 선택한 날짜의 데이터 필터링\n\n  const selectedDateFormatted = formatDate(selectedDate);\n  const filteredData = mealData.filter(record => formatDate(new Date(record.timestamp)) === selectedDateFormatted);\n\n  // 각 식사 유형별 데이터 분류\n  const mealsByType = mealTypes.reduce((acc, meal) => {\n    acc[meal] = filteredData.filter(record => record.dietMemo === meal);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MealTimingselect_Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/image/black.png\",\n      alt: \"Background\",\n      className: \"MainImage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"MealTimeingslelect_title\",\n      children: \"FitEnd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/image/foodlist/Rectangleboder.png\",\n        alt: \"ground\",\n        className: \"Rectangleground_right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/image/foodlist/Rectangleboder.png\",\n        alt: \"ground\",\n        className: \"Rectangleground_left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/image/foodlist/Rectangleboder.png\",\n        alt: \"ground\",\n        className: \"Rectangleground_bottom_right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/image/foodlist/Rectangleboder.png\",\n        alt: \"ground\",\n        className: \"Rectangleground_bottom_left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/image/foodlist/toast_6168691.png\",\n        alt: \"toast\",\n        className: \"moning_toast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/image/foodlist/noodles_4359781.png\",\n        alt: \"nodles\",\n        className: \"lunch_nodles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/image/foodlist/roast-chicken_4490344.png\",\n        alt: \"roast_chicken\",\n        className: \"dinner_roast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/image/foodlist/cupcake_497854.png\",\n        alt: \"cupcake\",\n        className: \"cupcake\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"Moning\",\n        children: \"Moning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"Lunch\",\n        children: \"LUNCH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"Dinner\",\n        children: \"DINNER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"Dessert\",\n        children: \"DESSERT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"plus_button_left\",\n        onClick: navigateFoodSearchR,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/foodlist/Group30.png\",\n          alt: \"plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"plus_button_right\",\n        onClick: navigateFoodSearchR,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/foodlist/Group30.png\",\n          alt: \"plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 81\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"plus_button_bottomleft\",\n        onClick: navigateFoodSearchR,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/foodlist/Group30.png\",\n          alt: \"plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 86\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"plus_button_bottomright\",\n        onClick: navigateFoodSearchR,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/foodlist/Group30.png\",\n          alt: \"plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 87\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-section moning\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"meal-title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 19\n          }, this), mealData.filter(record => record.dietMemo === \"moning\" && formatDate(new Date(record.timestamp)) === selectedDateFormatted).length > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"meal-calories moning\",\n            children: [mealData.filter(record => record.dietMemo === \"moning\" && formatDate(new Date(record.timestamp)) === selectedDateFormatted).reduce((sum, record) => sum + record.enerc, 0), \" kcal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"meal-no-data moning\",\n            children: \"No records\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-section lunch\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"meal-title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 19\n          }, this), mealData.filter(record => record.dietMemo === \"lunch\" && formatDate(new Date(record.timestamp)) === selectedDateFormatted).length > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"meal-calories lunch\",\n            children: [mealData.filter(record => record.dietMemo === \"lunch\" && formatDate(new Date(record.timestamp)) === selectedDateFormatted).reduce((sum, record) => sum + record.enerc, 0), \" kcal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"meal-no-data lunch\",\n            children: \"No records\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-section dinner\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"meal-title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 19\n          }, this), mealData.filter(record => record.dietMemo === \"dinner\" && formatDate(new Date(record.timestamp)) === selectedDateFormatted).length > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"meal-calories dinner\",\n            children: [mealData.filter(record => record.dietMemo === \"dinner\" && formatDate(new Date(record.timestamp)) === selectedDateFormatted).reduce((sum, record) => sum + record.enerc, 0), \" kcal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"meal-no-data dinner\",\n            children: \"No records\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-section dessert\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"meal-title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 19\n          }, this), mealData.filter(record => record.dietMemo === \"desset\" && formatDate(new Date(record.timestamp)) === selectedDateFormatted).length > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"meal-calories dessert\",\n            children: [\"\\uD83D\\uDD25 \\uCD1D \\uCE7C\\uB85C\\uB9AC: \", mealData.filter(record => record.dietMemo === \"desset\" && formatDate(new Date(record.timestamp)) === selectedDateFormatted).reduce((sum, record) => sum + record.enerc, 0), \" kcal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"meal-no-data dessert\",\n            children: \"No records\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"greenbutton\",\n        onClick: navigateFoodSearchR,\n        children: \"Check meal details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"yellowbutton\",\n        onClick: navigateCalender,\n        children: \"Calendar shortcuts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Button-Container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Button-Item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/HOME.png\",\n          alt: \"Main\",\n          className: \"ButtonImage\",\n          onClick: navigateMain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span\",\n          children: \"Main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Button-Item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/PAPAR.png\",\n          alt: \"Paper\",\n          className: \"ButtonImage\",\n          onClick: navigateToRecordBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span\",\n          children: \"Paper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Button-Item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/Vector7.png\",\n          alt: \"rank\",\n          className: \"ButtonImage\",\n          onClick: navigateGraph\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span\",\n          children: \"Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Button-Item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/Vector8.png\",\n          alt: \"Food\",\n          className: \"ButtonImage\",\n          onClick: navigateFood\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span\",\n          children: \"Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Button-Item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/PEOPLE.png\",\n          alt: \"Logout\",\n          className: \"ButtonImage\",\n          onClick: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n_s(MealTimingselect, \"g1OzJ+70WP4ZAE2WaJCB7gOre2o=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = MealTimingselect;\nvar _c;\n$RefreshReg$(_c, \"MealTimingselect\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","config","fetchHelper","jsxDEV","_jsxDEV","MealTimingselect","_s","location","selectedDate","Date","toISOString","split","state","navigate","userid","setUserid","mealData","setMealData","availableDates","setAvailableDates","mealTypes","formatDate","date","getTime","getTimezoneOffset","navigateMain","navigateToRecordBody","navigateFood","navigateGraph","navigateFoodSearchR","navigateCalender","handleLogout","response","SERVER_URL","method","credentials","sessionStorage","removeItem","handleMealSelection","mealType","then","Error","ok","json","data","console","log","headers","dates","Set","map","record","timestamp","sort","a","b","defaultDate","catch","error","warn","selectedDateFormatted","filteredData","filter","mealsByType","reduce","acc","meal","dietMemo","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","sum","enerc","_c","$RefreshReg$"],"sources":["C:/Users/root/Documents/GitHub/fit-end-main/fit_end_deploy_2/react/src/Component/MealTimingselect.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport \"../Style/MealTimingselect.css\"\r\nimport config from \"../config\";\r\nimport fetchHelper from \"../utils/fetchHelper\";\r\n\r\nexport default function MealTimingselect() {\r\n\r\n    //location.state에서 날짜를 받아 사용\r\n    const location = useLocation();\r\n    const { selectedDate = new Date().toISOString().split(\"T\")[0] } = location.state || {};\r\n\r\n    const navigate = useNavigate();\r\n    const [userid, setUserid] = useState(\"\");\r\n    const [mealData, setMealData] = useState([]); // 식사 데이터 저장\r\n    const [availableDates, setAvailableDates] = useState([]); // 기록이 있는 날짜 목록\r\n    const mealTypes = [\"moning\", \"lunch\", \"dinner\", \"desset\"]; // 아침, 점심, 저녁\r\n\r\n    // 📅 날짜 포맷 변환 함수 (한국 시간 기준)\r\n    const formatDate = (date) => {\r\n        return new Date(date.getTime() - date.getTimezoneOffset() * 60000)\r\n        .toISOString()\r\n        .split(\"T\")[0];\r\n    };\r\n    const navigateMain = () => {navigate(\"/main\");};\r\n    const navigateToRecordBody = () => {navigate(\"/recordbody\");};\r\n    const navigateFood=() => {navigate(\"/Calender\");};\r\n    const navigateGraph = () => {navigate(\"/Graph\")};\r\n    const navigateFoodSearchR = () => {navigate(\"/FoodSearchR\")}\r\n    const navigateCalender = () => {navigate(\"/todo\")}\r\n\r\n    const handleLogout = async () => {\r\n      const response = await fetchHelper(`http://${config.SERVER_URL}/login/logout`, {\r\n          method: \"POST\",\r\n          credentials: \"include\",\r\n      });\r\n\r\n      if (response === \"network-error\") {\r\n          navigate(\"/error/500\");\r\n      } else if (response === 404) {\r\n          navigate(\"/error/404\");\r\n      } else if (response === 500) {\r\n          navigate(\"/error/500\");\r\n      } else if (response === 503) {\r\n          navigate(\"/error/503\");\r\n      } else {\r\n          sessionStorage.removeItem(\"userid\");\r\n          navigate(\"/login\");\r\n      }\r\n  };\r\n\r\n    const handleMealSelection = (mealType) => {\r\n        navigate(\"/FoodSearchR\", { state: { selectedDate, mealType } });\r\n    };\r\n  \r\n      \r\n      useEffect(() => {\r\n        fetchHelper(`http://${config.SERVER_URL}/login/validate`, {\r\n            method: \"GET\",\r\n            credentials: \"include\",\r\n        })\r\n        .then((response) => {\r\n            if (response === \"network-error\") {\r\n                navigate(\"/error/500\");\r\n                throw new Error(\"Network error\");\r\n            } else if (response === 404) {\r\n                navigate(\"/error/404\");\r\n                throw new Error(\"404 Not Found\");\r\n            } else if (response === 500) {\r\n                navigate(\"/error/500\");\r\n                throw new Error(\"500 Internal Server Error\");\r\n            } else if (response === 503) {\r\n                navigate(\"/error/503\");\r\n                throw new Error(\"503 Service Unavailable\");\r\n            }\r\n\r\n            if (!response.ok) throw new Error(\"Unauthorized\");\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            console.log(\"로그인 상태 확인 성공:\", data);\r\n            setUserid(data.userid);\r\n\r\n            return fetchHelper(`http://${config.SERVER_URL}/food/diet-records/${data.userid}`, {\r\n                method: \"GET\",\r\n                credentials: \"include\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n            });\r\n        })\r\n        .then((response) => {\r\n            if (response === \"network-error\") {\r\n                navigate(\"/error/500\");\r\n                throw new Error(\"Network error\");\r\n            } else if (response === 404) {\r\n                navigate(\"/error/404\");\r\n                throw new Error(\"404 Not Found\");\r\n            } else if (response === 500) {\r\n                navigate(\"/error/500\");\r\n                throw new Error(\"500 Internal Server Error\");\r\n            } else if (response === 503) {\r\n                navigate(\"/error/503\");\r\n                throw new Error(\"503 Service Unavailable\");\r\n            }\r\n\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            setMealData(data);\r\n            const dates = [...new Set(data.map((record) => formatDate(new Date(record.timestamp))))].sort(\r\n                (a, b) => new Date(b) - new Date(a)\r\n            );\r\n            setAvailableDates(dates);\r\n            const defaultDate = dates[0] ? new Date(dates[0]) : new Date();\r\n        })\r\n        .catch((error) => {\r\n            console.warn(\"⚠️ 인증 실패 또는 데이터 불러오기 실패:\", error);\r\n            navigate(\"/login\");\r\n        });\r\n    }, [navigate]);\r\n\r\n      // 선택한 날짜의 데이터 필터링\r\n  \r\n  const selectedDateFormatted = formatDate(selectedDate);\r\n  const filteredData = mealData.filter((record) => formatDate(new Date(record.timestamp)) === selectedDateFormatted);\r\n\r\n  // 각 식사 유형별 데이터 분류\r\n  const mealsByType = mealTypes.reduce((acc, meal) => {\r\n    acc[meal] = filteredData.filter((record) => record.dietMemo === meal);\r\n    return acc;\r\n  }, {});\r\n\r\n\r\n    return (\r\n        <div className=\"MealTimingselect_Container\">\r\n            {/* 백그라운드 이미지랑 텍스트트 */}\r\n            <img src=\"/image/black.png\" alt=\"Background\" className=\"MainImage\" />\r\n            <a className=\"MealTimeingslelect_title\">FitEnd</a>\r\n            {/* <a className=\"FoodTitle\">Food Food Food</a> */}\r\n          <div className=\"content\">\r\n            {/* 꼭 필요한 배경이미지 */}\r\n            <img src=\"/image/foodlist/Rectangleboder.png\" alt=\"ground\" className=\"Rectangleground_right\"></img>\r\n            <img src=\"/image/foodlist/Rectangleboder.png\" alt=\"ground\" className=\"Rectangleground_left\"></img>\r\n            <img src=\"/image/foodlist/Rectangleboder.png\" alt=\"ground\" className=\"Rectangleground_bottom_right\"></img>\r\n            <img src=\"/image/foodlist/Rectangleboder.png\" alt=\"ground\" className=\"Rectangleground_bottom_left\"></img>\r\n            <img src=\"/image/foodlist/toast_6168691.png\" alt=\"toast\" className=\"moning_toast\"></img>\r\n            <img src=\"/image/foodlist/noodles_4359781.png\" alt=\"nodles\" className=\"lunch_nodles\"></img>\r\n            <img src=\"/image/foodlist/roast-chicken_4490344.png\" alt=\"roast_chicken\" className=\"dinner_roast\"></img>\r\n            <img src=\"/image/foodlist/cupcake_497854.png\" alt=\"cupcake\" className=\"cupcake\"></img>\r\n\r\n            <a className=\"Moning\">Moning</a>\r\n            <a className=\"Lunch\">LUNCH</a>\r\n            <a className=\"Dinner\">DINNER</a>\r\n            <a className=\"Dessert\">DESSERT</a>\r\n\r\n            <button className=\"plus_button_left\" onClick={navigateFoodSearchR}><img src=\"/image/foodlist/Group30.png\" alt=\"plus\"></img></button>\r\n            <button className=\"plus_button_right\" onClick={navigateFoodSearchR}><img src=\"/image/foodlist/Group30.png\" alt=\"plus\"></img></button>\r\n            <button className=\"plus_button_bottomleft\" onClick={navigateFoodSearchR}><img src=\"/image/foodlist/Group30.png\" alt=\"plus\"></img></button>\r\n            <button className=\"plus_button_bottomright\" onClick={navigateFoodSearchR}><img src=\"/image/foodlist/Group30.png\" alt=\"plus\"></img></button>\r\n\r\n            <div className=\"meal-data\">\r\n              {/* 🍞 아침 (moning) */}\r\n              <div className=\"meal-section moning\">\r\n                  <h3 className=\"meal-title\"></h3>\r\n                  {mealData.filter(record => record.dietMemo === \"moning\" && formatDate(new Date(record.timestamp)) === selectedDateFormatted).length > 0 ? (\r\n                      <span className=\"meal-calories moning\">\r\n                          {\r\n                              mealData.filter(record => record.dietMemo === \"moning\" && formatDate(new Date(record.timestamp)) === selectedDateFormatted)\r\n                              .reduce((sum, record) => sum + record.enerc, 0)\r\n                          } kcal\r\n                      </span>\r\n                  ) : (\r\n                      <span className=\"meal-no-data moning\">No records</span>\r\n                  )}\r\n              </div>\r\n\r\n              {/* 🍜 점심 (lunch) */}\r\n              <div className=\"meal-section lunch\">\r\n                  <h3 className=\"meal-title\"></h3>\r\n                  {mealData.filter(record => record.dietMemo === \"lunch\" && formatDate(new Date(record.timestamp)) === selectedDateFormatted).length > 0 ? (\r\n                      <span className=\"meal-calories lunch\">\r\n                          {\r\n                              mealData.filter(record => record.dietMemo === \"lunch\" && formatDate(new Date(record.timestamp)) === selectedDateFormatted)\r\n                              .reduce((sum, record) => sum + record.enerc, 0)\r\n                          } kcal\r\n                      </span>\r\n                  ) : (\r\n                      <span className=\"meal-no-data lunch\">No records</span>\r\n                  )}\r\n              </div>\r\n\r\n              {/* 🍗 저녁 (dinner) */}\r\n              <div className=\"meal-section dinner\">\r\n                  <h3 className=\"meal-title\"></h3>\r\n                  {mealData.filter(record => record.dietMemo === \"dinner\" && formatDate(new Date(record.timestamp)) === selectedDateFormatted).length > 0 ? (\r\n                      <span className=\"meal-calories dinner\">\r\n                          {\r\n                              mealData.filter(record => record.dietMemo === \"dinner\" && formatDate(new Date(record.timestamp)) === selectedDateFormatted)\r\n                              .reduce((sum, record) => sum + record.enerc, 0)\r\n                          } kcal\r\n                      </span>\r\n                  ) : (\r\n                      <span className=\"meal-no-data dinner\">No records</span>\r\n                  )}\r\n              </div>\r\n\r\n              {/* 🍰 디저트 (dessert) */}\r\n              <div className=\"meal-section dessert\">\r\n                  <h3 className=\"meal-title\"></h3>\r\n                  {mealData.filter(record => record.dietMemo === \"desset\" && formatDate(new Date(record.timestamp)) === selectedDateFormatted).length > 0 ? (\r\n                      <span className=\"meal-calories dessert\">\r\n                          🔥 총 칼로리: {\r\n                              mealData.filter(record => record.dietMemo === \"desset\" && formatDate(new Date(record.timestamp)) === selectedDateFormatted)\r\n                              .reduce((sum, record) => sum + record.enerc, 0)\r\n                          } kcal\r\n                      </span>\r\n                  ) : (\r\n                      <span className=\"meal-no-data dessert\">No records</span>\r\n                  )}\r\n              </div>\r\n            </div>\r\n            <button className=\"greenbutton\" onClick={navigateFoodSearchR}>Check meal details</button>\r\n            {/* <span className=\"img-alt-text\">Check meal details</span> */}\r\n\r\n            <button className=\"yellowbutton\" onClick={navigateCalender}>Calendar shortcuts</button>\r\n            {/* <span className=\"img-alt-text-yellow\">Calendar shortcuts</span> */}\r\n          </div>\r\n          {/* 기타 UI 구성 */}\r\n          <div className=\"Button-Container\">\r\n            <div className=\"Button-Item\">\r\n              <img src=\"/image/HOME.png\" alt=\"Main\" className=\"ButtonImage\" onClick={navigateMain} />\r\n              <span className=\"Span\">Main</span>\r\n            </div>\r\n\r\n            <div className=\"Button-Item\">\r\n              <img src=\"/image/PAPAR.png\" alt=\"Paper\" className=\"ButtonImage\" onClick={navigateToRecordBody} />\r\n              <span className=\"Span\">Paper</span>\r\n            </div>\r\n\r\n            <div className=\"Button-Item\">\r\n              <img src=\"/image/Vector7.png\" alt=\"rank\" className=\"ButtonImage\" onClick={navigateGraph} />\r\n              <span className=\"Span\">Graph</span>\r\n            </div>\r\n\r\n            <div className=\"Button-Item\">\r\n              <img src=\"/image/Vector8.png\" alt=\"Food\" className=\"ButtonImage\" onClick={navigateFood}/>\r\n              <span className=\"Span\">Food</span>\r\n            </div>\r\n\r\n            <div className=\"Button-Item\">\r\n              <img src=\"/image/PEOPLE.png\" alt=\"Logout\" className=\"ButtonImage\" onClick={handleLogout} />\r\n              <span className=\"Span\">Logout</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}