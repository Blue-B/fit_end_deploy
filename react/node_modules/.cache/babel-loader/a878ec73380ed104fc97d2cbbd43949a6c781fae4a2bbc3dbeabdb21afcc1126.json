{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\fit-end\\\\fitend\\\\fit_end_deploy\\\\react\\\\src\\\\Component\\\\MealCalender.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport styles from \"../Style/MealCalender.module.css\";\nimport config from \"../config\";\n// import { FaCalendarAlt } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MealCalendar = ({\n  mealData = []\n}) => {\n  _s();\n  // ✅ mealData 기본값을 빈 배열로 설정\n  const navigate = useNavigate();\n  const [year, setYear] = useState(2025);\n  const [month, setMonth] = useState(3);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [mealRecords, setMealRecords] = useState({}); // ✅ 정리된 데이터 저장\n\n  const dateKey = `${year}-${month.toString().padStart(2, \"0\")}-${selectedDate.toString().padStart(2, \"0\")}`;\n  const mealDataForDate = mealRecords[dateKey];\n\n  // 📌 월의 시작 요일을 월요일(0)부터 시작하도록 조정\n  const rawStartDay = new Date(year, month - 1, 1).getDay();\n  const startDay = rawStartDay === 0 ? 6 : rawStartDay - 1; // 0(일요일) → 6, 그 외는 -1 적용\n\n  const navigateMain = () => {\n    navigate(\"/main\");\n  };\n  const navigateToRecordBody = () => {\n    navigate(\"/recordbody\");\n  };\n  const navigateFood = () => {\n    if (selectedDate) {\n      // 선택한 날짜의 full date 생성\n      const fullDate = new Date(year, month - 1, selectedDate);\n      navigate(\"/MealTimingselect\", {\n        state: {\n          selectedDate: fullDate\n        }\n      });\n    } else {\n      alert(\"날짜를 선택하세요!\");\n    }\n  };\n  const navigateGraph = () => {\n    navigate(\"/Graph\");\n  };\n  const thisPage = () => {\n    navigate(\"/Calender\");\n  };\n  const handleLogout = async () => {\n    await fetch(`http://${config.SERVER_URL}/request/logout`, {\n      method: \"POST\",\n      credentials: \"include\"\n    });\n    sessionStorage.removeItem(\"useridRef\");\n    navigate(\"/login\");\n  };\n\n  // 📅 날짜 포맷 변환 함수\n  const formatDate = date => {\n    return new Date(date.getTime() - date.getTimezoneOffset() * 60000).toISOString().split(\"T\")[0];\n  };\n  useEffect(() => {\n    if (!Array.isArray(mealData)) {\n      console.warn(\"mealData가 배열이 아닙니다!\", mealData);\n      return;\n    }\n    const formattedData = mealData.reduce((acc, record) => {\n      // ✅ mealData 기준으로 변환\n      const dateKey = formatDate(new Date(record.timestamp));\n      if (!acc[dateKey]) {\n        acc[dateKey] = {\n          enerc: 0,\n          meal: []\n        }; // ✅ 'enerc' 사용\n      }\n      acc[dateKey].enerc += record.enerc; // ✅ 누적 kcal 값 반영\n      acc[dateKey].meal.push(record.dietMemo);\n      return acc;\n    }, {});\n    setMealRecords(formattedData); // ✅ mealRecords 상태 직접 업데이트\n  }, [mealData]); // ✅ mealData가 변경될 때만 실행\n\n  // const isSelected = selectedDate === day;\n\n  const handleDateClick = day => {\n    setSelectedDate(day); // ✅ 날짜 객체가 아니라 숫자로 저장\n  };\n  // ✅ 현재 월의 총 일 수 가져오기\n  const daysInMonth = new Date(year, month, 0).getDate();\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const changeMonth = offset => {\n    let newMonth = month + offset;\n    let newYear = year;\n    if (newMonth < 1) {\n      newMonth = 12;\n      newYear--;\n    } else if (newMonth > 12) {\n      newMonth = 1;\n      newYear++;\n    }\n\n    // ✅ 변경되지 않은 경우 `setState` 실행 방지\n    if (newMonth !== month || newYear !== year) {\n      setYear(newYear);\n      setMonth(newMonth);\n      setSelectedDate(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.MealCalender_Container,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/image/black.png\",\n      alt: \"Background\",\n      className: styles.MealCalender_image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      className: styles.MealCalender_title,\n      children: \"FitEnd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"meal-calendar\"],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"calendar-header\"],\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeMonth(-1),\n          children: \"\\u27EA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [monthNames[month - 1], \" \", year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeMonth(1),\n          children: \"\\u27EB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.weekdays,\n        children: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"calendar-days\"],\n        children: Array.from({\n          length: daysInMonth + startDay\n        }).map((_, index) => {\n          const day = index - startDay + 1;\n          const dateKey = `${year}-${month.toString().padStart(2, \"0\")}-${day.toString().padStart(2, \"0\")}`;\n          const isSelected = selectedDate === day;\n          const hasData = mealRecords[dateKey];\n          return index < startDay ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"empty-day\"]\n          }, `empty-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDateClick(day),\n            className: `${styles[\"calendar-day\"]} ${isSelected ? styles.selected : \"\"} ${hasData ? styles[\"has-data\"] : \"\"}`,\n            children: day\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), selectedDate && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"selected-date-container\"],\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles[\"selected-date-text\"],\n          children: [year, \"\\uB144 \", month, \"\\uC6D4 \", selectedDate, \"\\uC77C \\uC120\\uD0DD\\uB428\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), mealDataForDate ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles[\"meal-data-text\"],\n            children: mealDataForDate.meal.join(\", \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles[\"calorie-data-text\"],\n            children: [\"\\uD83D\\uDD25 \", mealDataForDate.enerc, \" kcal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles[\"no-record-text\"],\n          children: \"\\uAE30\\uB85D \\uC5C6\\uC74C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.eat,\n          onClick: navigateFood,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.eat_yellow_button,\n            children: \"Going to record food Click!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"Button-Container\"],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"Button-Item\"],\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/HOME.png\",\n          alt: \"Main\",\n          className: styles.ButtonImage,\n          onClick: navigateMain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.Span,\n          children: \"Main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"Button-Item\"],\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/PAPAR.png\",\n          alt: \"Paper\",\n          className: styles.ButtonImage,\n          onClick: navigateToRecordBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.Span,\n          children: \"Paper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"Button-Item\"],\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/Vector7.png\",\n          alt: \"rank\",\n          className: styles.ButtonImage,\n          onClick: navigateGraph\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.Span,\n          children: \"Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"Button-Item\"],\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/Vector8.png\",\n          alt: \"Food\",\n          className: styles.ButtonImage,\n          onClick: thisPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.Span,\n          children: \"Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"Button-Item\"],\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/PEOPLE.png\",\n          alt: \"Logout\",\n          className: styles.ButtonImage,\n          onClick: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.Span,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(MealCalendar, \"HkLqibMB8W3wuXbsMg/FhTi0x6o=\", false, function () {\n  return [useNavigate];\n});\n_c = MealCalendar;\nexport default MealCalendar;\nvar _c;\n$RefreshReg$(_c, \"MealCalendar\");","map":{"version":3,"names":["useState","useEffect","useNavigate","styles","config","jsxDEV","_jsxDEV","Fragment","_Fragment","MealCalendar","mealData","_s","navigate","year","setYear","month","setMonth","selectedDate","setSelectedDate","mealRecords","setMealRecords","dateKey","toString","padStart","mealDataForDate","rawStartDay","Date","getDay","startDay","navigateMain","navigateToRecordBody","navigateFood","fullDate","state","alert","navigateGraph","thisPage","handleLogout","fetch","SERVER_URL","method","credentials","sessionStorage","removeItem","formatDate","date","getTime","getTimezoneOffset","toISOString","split","Array","isArray","console","warn","formattedData","reduce","acc","record","timestamp","enerc","meal","push","dietMemo","handleDateClick","day","daysInMonth","getDate","monthNames","changeMonth","offset","newMonth","newYear","className","MealCalender_Container","children","src","alt","MealCalender_image","fileName","_jsxFileName","lineNumber","columnNumber","MealCalender_title","onClick","weekdays","map","from","length","_","index","isSelected","hasData","selected","join","eat","eat_yellow_button","ButtonImage","Span","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/fit-end/fitend/fit_end_deploy/react/src/Component/MealCalender.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from \"../Style/MealCalender.module.css\"\r\nimport config from \"../config\";\r\n// import { FaCalendarAlt } from \"react-icons/fa\";\r\n\r\nconst MealCalendar = ({ mealData = [] }) => { // ✅ mealData 기본값을 빈 배열로 설정\r\n  const navigate = useNavigate();\r\n  const [year, setYear] = useState(2025);\r\n  const [month, setMonth] = useState(3);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [mealRecords, setMealRecords] = useState({}); // ✅ 정리된 데이터 저장\r\n\r\n  const dateKey = `${year}-${month.toString().padStart(2, \"0\")}-${selectedDate.toString().padStart(2, \"0\")}`;\r\nconst mealDataForDate = mealRecords[dateKey];\r\n\r\n  // 📌 월의 시작 요일을 월요일(0)부터 시작하도록 조정\r\n  const rawStartDay = new Date(year, month - 1, 1).getDay();\r\n  const startDay = (rawStartDay === 0 ? 6 : rawStartDay - 1); // 0(일요일) → 6, 그 외는 -1 적용\r\n\r\n  \r\n  const navigateMain = () => {navigate(\"/main\");};\r\n\r\n  const navigateToRecordBody = () => {navigate(\"/recordbody\");};\r\n\r\n  const navigateFood = () => {\r\n    if (selectedDate) {\r\n      // 선택한 날짜의 full date 생성\r\n      const fullDate = new Date(year, month - 1, selectedDate);\r\n      navigate(\"/MealTimingselect\", { state: { selectedDate: fullDate } });\r\n    } else {\r\n      alert(\"날짜를 선택하세요!\");\r\n    }\r\n  };\r\n  \r\n\r\n  const navigateGraph = () => {navigate(\"/Graph\")};\r\n\r\n  const thisPage = () => {navigate(\"/Calender\")};\r\n\r\n  const handleLogout = async () => {\r\n    await fetch(`http://${config.SERVER_URL}/request/logout`, {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n    });\r\n    sessionStorage.removeItem(\"useridRef\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  // 📅 날짜 포맷 변환 함수\r\n  const formatDate = (date) => {\r\n    return new Date(date.getTime() - date.getTimezoneOffset() * 60000)\r\n      .toISOString()\r\n      .split(\"T\")[0];\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!Array.isArray(mealData)) {\r\n      console.warn(\"mealData가 배열이 아닙니다!\", mealData);\r\n      return;\r\n    }\r\n  \r\n    const formattedData = mealData.reduce((acc, record) => { // ✅ mealData 기준으로 변환\r\n      const dateKey = formatDate(new Date(record.timestamp));\r\n  \r\n      if (!acc[dateKey]) {\r\n        acc[dateKey] = { enerc: 0, meal: [] }; // ✅ 'enerc' 사용\r\n      }\r\n  \r\n      acc[dateKey].enerc += record.enerc; // ✅ 누적 kcal 값 반영\r\n      acc[dateKey].meal.push(record.dietMemo);\r\n      return acc;\r\n    }, {});\r\n  \r\n    setMealRecords(formattedData); // ✅ mealRecords 상태 직접 업데이트\r\n  }, [mealData]); // ✅ mealData가 변경될 때만 실행\r\n  \r\n\r\n  // const isSelected = selectedDate === day;\r\n\r\n  const handleDateClick = (day) => {\r\n    setSelectedDate(day); // ✅ 날짜 객체가 아니라 숫자로 저장\r\n  };  \r\n  // ✅ 현재 월의 총 일 수 가져오기\r\n  const daysInMonth = new Date(year, month, 0).getDate();\r\n\r\n  const monthNames = [\r\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n  \r\n  const changeMonth = (offset) => {\r\n    let newMonth = month + offset;\r\n    let newYear = year;\r\n  \r\n    if (newMonth < 1) {\r\n      newMonth = 12;\r\n      newYear--;\r\n    } else if (newMonth > 12) {\r\n      newMonth = 1;\r\n      newYear++;\r\n    }\r\n  \r\n    // ✅ 변경되지 않은 경우 `setState` 실행 방지\r\n    if (newMonth !== month || newYear !== year) {\r\n      setYear(newYear);\r\n      setMonth(newMonth);\r\n      setSelectedDate(null);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className={styles.MealCalender_Container}>\r\n      <img\r\n        src=\"/image/black.png\"\r\n        alt=\"Background\"\r\n        className={styles.MealCalender_image}\r\n      />\r\n      <a className={styles.MealCalender_title}>FitEnd</a>\r\n      <div className={styles[\"meal-calendar\"]}>\r\n        <div className={styles[\"calendar-header\"]}>\r\n          <button onClick={() => changeMonth(-1)}>⟪</button>\r\n          <h2>\r\n            {monthNames[month - 1]} {year}\r\n          </h2>\r\n          <button onClick={() => changeMonth(1)}>⟫</button>\r\n        </div>\r\n\r\n        <div className={styles.weekdays}>\r\n          {[\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"].map((day) => (\r\n            <div key={day}>{day}</div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className={styles[\"calendar-days\"]}>\r\n          {Array.from({ length: daysInMonth + startDay }).map((_, index) => {\r\n            const day = index - startDay + 1;\r\n            const dateKey = `${year}-${month.toString().padStart(2, \"0\")}-${day\r\n              .toString()\r\n              .padStart(2, \"0\")}`;\r\n            const isSelected = selectedDate === day;\r\n            const hasData = mealRecords[dateKey];\r\n\r\n            return index < startDay ? (\r\n              <div key={`empty-${index}`} className={styles[\"empty-day\"]}></div>\r\n            ) : (\r\n              <button\r\n                key={day}\r\n                onClick={() => handleDateClick(day)}\r\n                className={`${styles[\"calendar-day\"]} ${\r\n                  isSelected ? styles.selected : \"\"\r\n                } ${hasData ? styles[\"has-data\"] : \"\"}`}\r\n              >\r\n                {day}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {selectedDate && (\r\n          <div className={styles[\"selected-date-container\"]}>\r\n            <p className={styles[\"selected-date-text\"]}>\r\n              {year}년 {month}월 {selectedDate}일 선택됨\r\n            </p>\r\n\r\n            {mealDataForDate ? (\r\n  <>\r\n    <p className={styles[\"meal-data-text\"]}>\r\n      {mealDataForDate.meal.join(\", \")}\r\n    </p>\r\n    <p className={styles[\"calorie-data-text\"]}>\r\n      🔥 {mealDataForDate.enerc} kcal\r\n    </p>\r\n  </>\r\n) : (\r\n  <p className={styles[\"no-record-text\"]}>기록 없음</p>\r\n)}\r\n\r\n            <button className={styles.eat} onClick={navigateFood}>\r\n              <span className={styles.eat_yellow_button}>\r\n                Going to record food Click!\r\n              </span>\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className={styles[\"Button-Container\"]}>\r\n        <div className={styles[\"Button-Item\"]}>\r\n          <img\r\n            src=\"/image/HOME.png\"\r\n            alt=\"Main\"\r\n            className={styles.ButtonImage}\r\n            onClick={navigateMain}\r\n          />\r\n          <span className={styles.Span}>Main</span>\r\n        </div>\r\n        <div className={styles[\"Button-Item\"]}>\r\n          <img\r\n            src=\"/image/PAPAR.png\"\r\n            alt=\"Paper\"\r\n            className={styles.ButtonImage}\r\n            onClick={navigateToRecordBody}\r\n          />\r\n          <span className={styles.Span}>Paper</span>\r\n        </div>\r\n        <div className={styles[\"Button-Item\"]}>\r\n          <img\r\n            src=\"/image/Vector7.png\"\r\n            alt=\"rank\"\r\n            className={styles.ButtonImage}\r\n            onClick={navigateGraph}\r\n          />\r\n          <span className={styles.Span}>Graph</span>\r\n        </div>\r\n        <div className={styles[\"Button-Item\"]}>\r\n          <img\r\n            src=\"/image/Vector8.png\"\r\n            alt=\"Food\"\r\n            className={styles.ButtonImage}\r\n            onClick={thisPage}\r\n          />\r\n          <span className={styles.Span}>Food</span>\r\n        </div>\r\n        <div className={styles[\"Button-Item\"]}>\r\n          <img\r\n            src=\"/image/PEOPLE.png\"\r\n            alt=\"Logout\"\r\n            className={styles.ButtonImage}\r\n            onClick={handleLogout}\r\n          />\r\n          <span className={styles.Span}>Logout</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MealCalendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}