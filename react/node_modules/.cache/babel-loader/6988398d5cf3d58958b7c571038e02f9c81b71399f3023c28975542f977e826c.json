{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\fit-end\\\\fitend\\\\fit_end_deploy\\\\react\\\\src\\\\Component\\\\MealCalender.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport \"../Style/MealCalender.css\";\nimport config from \"../config\";\n// import { FaCalendarAlt } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MealCalendar = ({\n  mealData = []\n}) => {\n  _s();\n  // ✅ mealData 기본값을 빈 배열로 설정\n  const navigate = useNavigate();\n  const [year, setYear] = useState(2025);\n  const [month, setMonth] = useState(3);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [mealRecords, setMealRecords] = useState({}); // ✅ 정리된 데이터 저장\n\n  // 📌 월의 시작 요일을 월요일(0)부터 시작하도록 조정\n  const rawStartDay = new Date(year, month - 1, 1).getDay();\n  const startDay = rawStartDay === 0 ? 6 : rawStartDay - 1; // 0(일요일) → 6, 그 외는 -1 적용\n\n  const navigateMain = () => {\n    navigate(\"/main\");\n  };\n  const navigateToRecordBody = () => {\n    navigate(\"/recodbody\");\n  };\n  const navigateFood = () => {\n    if (!selectedDate) {\n      alert(\"캘린더에서 날짜를 선택하세요!\");\n      return;\n    }\n    const formattedDate = `${year}-${month.toString().padStart(2, \"0\")}-${selectedDate.toString().padStart(2, \"0\")}`;\n    navigate(\"/MealTimingselect\", {\n      state: {\n        date: formattedDate\n      }\n    });\n  };\n  const navigateGraph = () => {\n    navigate(\"/Graph\");\n  };\n  const thisPage = () => {\n    navigate(\"/Calender\");\n  };\n  const handleLogout = async () => {\n    await fetch(`http://${config.SERVER_URL}/request/logout`, {\n      method: \"POST\",\n      credentials: \"include\"\n    });\n    sessionStorage.removeItem(\"useridRef\");\n    navigate(\"/login\");\n  };\n\n  // 📅 날짜 포맷 변환 함수\n  const formatDate = date => {\n    return new Date(date.getTime() - date.getTimezoneOffset() * 60000).toISOString().split(\"T\")[0];\n  };\n  useEffect(() => {\n    if (!Array.isArray(mealData)) {\n      console.warn(\"mealData가 배열이 아닙니다!\", mealData);\n      return;\n    }\n    const formattedData = mealData.reduce((acc, record) => {\n      const dateKey = formatDate(new Date(record.timestamp));\n      if (!acc[dateKey]) {\n        acc[dateKey] = {\n          calories: 0,\n          meal: []\n        };\n      }\n      acc[dateKey].calories += record.calories;\n      acc[dateKey].meal.push(record.dietMemo);\n      return acc;\n    }, {});\n\n    // ✅ 기존 데이터와 다를 경우에만 업데이트\n    if (JSON.stringify(mealRecords) !== JSON.stringify(formattedData)) {\n      setMealRecords(formattedData);\n    }\n  }, [mealData]);\n\n  // const isSelected = selectedDate === day;\n\n  const handleDateClick = day => {\n    setSelectedDate(day); // ✅ 날짜 객체가 아니라 숫자로 저장\n  };\n  // ✅ 현재 월의 총 일 수 가져오기\n  const daysInMonth = new Date(year, month, 0).getDate();\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const changeMonth = offset => {\n    let newMonth = month + offset;\n    let newYear = year;\n    if (newMonth < 1) {\n      newMonth = 12;\n      newYear--;\n    } else if (newMonth > 12) {\n      newMonth = 1;\n      newYear++;\n    }\n\n    // ✅ 변경되지 않은 경우 `setState` 실행 방지\n    if (newMonth !== month || newYear !== year) {\n      setYear(newYear);\n      setMonth(newMonth);\n      setSelectedDate(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MealCalender_Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/image/black.png\",\n      alt: \"Background\",\n      className: \"MealCalender_image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"MealCalender_title\",\n      children: \"FitEnd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-calendar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeMonth(-1),\n          children: \"\\u27EA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [monthNames[month - 1], \" \", year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeMonth(1),\n          children: \"\\u27EB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weekdays\",\n        children: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-days\",\n        children: Array.from({\n          length: daysInMonth + startDay\n        }).map((_, index) => {\n          const day = index - startDay + 1;\n          const dateKey = `${year}-${month.toString().padStart(2, \"0\")}-${day.toString().padStart(2, \"0\")}`;\n          const isSelected = selectedDate === day;\n          const hasData = mealRecords[dateKey];\n          return index < startDay ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-day\"\n          }, `empty-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this) // 빈 칸 추가\n          : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDateClick(day),\n            className: `calendar-day ${isSelected ? \"selected\" : \"\"} ${hasData ? \"has-data\" : \"\"}`,\n            children: day\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), selectedDate && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-date-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"selected-date-text\",\n          children: [year, \"\\uB144 \", month, \"\\uC6D4 \", selectedDate, \"\\uC77C \\uC120\\uD0DD\\uB428\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), mealRecords[`${year}-${month.toString().padStart(2, \"0\")}-${selectedDate.toString().padStart(2, \"0\")}`] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"meal-data-text\",\n            children: mealRecords[`${year}-${month.toString().padStart(2, \"0\")}-${selectedDate.toString().padStart(2, \"0\")}`].meal.join(\", \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"calorie-data-text\",\n            children: [\"\\uD83D\\uDD25 \", mealRecords[`${year}-${month.toString().padStart(2, \"0\")}-${selectedDate.toString().padStart(2, \"0\")}`].calories, \" kcal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-record-text\",\n          children: \"\\uAE30\\uB85D \\uC5C6\\uC74C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"eat\",\n          onClick: navigateFood,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"eat_yellow_button\",\n            children: \"What'd you have today?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Button-Container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Button-Item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/HOME.png\",\n          alt: \"Main\",\n          className: \"ButtonImage\",\n          onClick: navigateMain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span\",\n          children: \"Main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Button-Item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/PAPAR.png\",\n          alt: \"Paper\",\n          className: \"ButtonImage\",\n          onClick: navigateToRecordBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span\",\n          children: \"Paper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Button-Item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/Vector7.png\",\n          alt: \"rank\",\n          className: \"ButtonImage\",\n          onClick: navigateGraph\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span\",\n          children: \"Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Button-Item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/Vector8.png\",\n          alt: \"Food\",\n          className: \"ButtonImage\",\n          onClick: thisPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span\",\n          children: \"Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Button-Item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/PEOPLE.png\",\n          alt: \"Logout\",\n          className: \"ButtonImage\",\n          onClick: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(MealCalendar, \"HkLqibMB8W3wuXbsMg/FhTi0x6o=\", false, function () {\n  return [useNavigate];\n});\n_c = MealCalendar;\nexport default MealCalendar;\nvar _c;\n$RefreshReg$(_c, \"MealCalendar\");","map":{"version":3,"names":["useState","useEffect","useNavigate","config","jsxDEV","_jsxDEV","Fragment","_Fragment","MealCalendar","mealData","_s","navigate","year","setYear","month","setMonth","selectedDate","setSelectedDate","mealRecords","setMealRecords","rawStartDay","Date","getDay","startDay","navigateMain","navigateToRecordBody","navigateFood","alert","formattedDate","toString","padStart","state","date","navigateGraph","thisPage","handleLogout","fetch","SERVER_URL","method","credentials","sessionStorage","removeItem","formatDate","getTime","getTimezoneOffset","toISOString","split","Array","isArray","console","warn","formattedData","reduce","acc","record","dateKey","timestamp","calories","meal","push","dietMemo","JSON","stringify","handleDateClick","day","daysInMonth","getDate","monthNames","changeMonth","offset","newMonth","newYear","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","from","length","_","index","isSelected","hasData","join","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/fit-end/fitend/fit_end_deploy/react/src/Component/MealCalender.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport \"../Style/MealCalender.css\";\nimport config from \"../config\";\n// import { FaCalendarAlt } from \"react-icons/fa\";\n\nconst MealCalendar = ({ mealData = [] }) => { // ✅ mealData 기본값을 빈 배열로 설정\n  const navigate = useNavigate();\n  const [year, setYear] = useState(2025);\n  const [month, setMonth] = useState(3);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [mealRecords, setMealRecords] = useState({}); // ✅ 정리된 데이터 저장\n\n  // 📌 월의 시작 요일을 월요일(0)부터 시작하도록 조정\n  const rawStartDay = new Date(year, month - 1, 1).getDay();\n  const startDay = (rawStartDay === 0 ? 6 : rawStartDay - 1); // 0(일요일) → 6, 그 외는 -1 적용\n\n  \n  const navigateMain = () => {navigate(\"/main\");};\n\n  const navigateToRecordBody = () => {navigate(\"/recodbody\");};\n\n  const navigateFood= () => {\n    if (!selectedDate) {\n      alert(\"캘린더에서 날짜를 선택하세요!\");\n      return;\n    }\n  \n    const formattedDate = `${year}-${month.toString().padStart(2, \"0\")}-${selectedDate.toString().padStart(2, \"0\")}`;\n    navigate(\"/MealTimingselect\", { state: { date: formattedDate } });\n\n  };\n\n  const navigateGraph = () => {navigate(\"/Graph\")};\n\n  const thisPage = () => {navigate(\"/Calender\")};\n\n  const handleLogout = async () => {\n    await fetch(`http://${config.SERVER_URL}/request/logout`, {\n        method: \"POST\",\n        credentials: \"include\",\n    });\n    sessionStorage.removeItem(\"useridRef\");\n    navigate(\"/login\");\n  };\n\n  // 📅 날짜 포맷 변환 함수\n  const formatDate = (date) => {\n    return new Date(date.getTime() - date.getTimezoneOffset() * 60000)\n      .toISOString()\n      .split(\"T\")[0];\n  };\n\n  useEffect(() => {\n    if (!Array.isArray(mealData)) {\n      console.warn(\"mealData가 배열이 아닙니다!\", mealData);\n      return;\n    }\n  \n    const formattedData = mealData.reduce((acc, record) => {\n      const dateKey = formatDate(new Date(record.timestamp));\n  \n      if (!acc[dateKey]) {\n        acc[dateKey] = { calories: 0, meal: [] };\n      }\n  \n      acc[dateKey].calories += record.calories;\n      acc[dateKey].meal.push(record.dietMemo);\n      return acc;\n    }, {});\n  \n    // ✅ 기존 데이터와 다를 경우에만 업데이트\n    if (JSON.stringify(mealRecords) !== JSON.stringify(formattedData)) {\n      setMealRecords(formattedData);\n    }\n  }, [mealData]);\n\n  // const isSelected = selectedDate === day;\n\n  const handleDateClick = (day) => {\n    setSelectedDate(day); // ✅ 날짜 객체가 아니라 숫자로 저장\n  };  \n  // ✅ 현재 월의 총 일 수 가져오기\n  const daysInMonth = new Date(year, month, 0).getDate();\n\n  const monthNames = [\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n  \n  const changeMonth = (offset) => {\n    let newMonth = month + offset;\n    let newYear = year;\n  \n    if (newMonth < 1) {\n      newMonth = 12;\n      newYear--;\n    } else if (newMonth > 12) {\n      newMonth = 1;\n      newYear++;\n    }\n  \n    // ✅ 변경되지 않은 경우 `setState` 실행 방지\n    if (newMonth !== month || newYear !== year) {\n      setYear(newYear);\n      setMonth(newMonth);\n      setSelectedDate(null);\n    }\n  };\n  \n\n  return (\n    <div className=\"MealCalender_Container\">\n      <img src=\"/image/black.png\" alt=\"Background\" className=\"MealCalender_image\" />\n      <a className=\"MealCalender_title\">FitEnd</a>\n      <div className=\"meal-calendar\">\n       {/* 📌 월 변경 헤더 */}\n      <div className=\"calendar-header\">\n        <button onClick={() => changeMonth(-1)}>⟪</button>\n        <h2>{monthNames[month - 1]} {year}</h2> {/* ✅ 숫자 → 영어로 변경 */}\n        <button onClick={() => changeMonth(1)}>⟫</button>\n      </div>\n\n\n        {/* 요일 헤더 */}\n        <div className=\"weekdays\">\n          {[\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"].map((day) => (\n            <div key={day}>{day}</div>\n          ))}\n        </div>\n\n        {/* 날짜 표시 */}\n        <div className=\"calendar-days\">\n          {Array.from({ length: daysInMonth + startDay }).map((_, index) => {\n            const day = index - startDay + 1;\n            const dateKey = `${year}-${month.toString().padStart(2, \"0\")}-${day.toString().padStart(2, \"0\")}`;\n            const isSelected = selectedDate === day;\n            const hasData = mealRecords[dateKey];\n\n            return index < startDay ? (\n              <div key={`empty-${index}`} className=\"empty-day\"></div> // 빈 칸 추가\n            ) : (\n              <button\n                key={day}\n                onClick={() => handleDateClick(day)}\n                className={`calendar-day ${isSelected ? \"selected\" : \"\"} ${hasData ? \"has-data\" : \"\"}`}\n              >\n                {day}\n              </button>\n            );\n          })}\n        </div>\n\n        {/* 선택된 날짜 정보 */}\n        {selectedDate && (\n          <div className=\"selected-date-container\">\n            <p className=\"selected-date-text\">{year}년 {month}월 {selectedDate}일 선택됨</p>\n\n            {/* 🔥 해당 날짜에 데이터가 존재하는지 확인 */}\n            {mealRecords[`${year}-${month.toString().padStart(2, \"0\")}-${selectedDate.toString().padStart(2, \"0\")}`] ? (\n              <>\n                <p className=\"meal-data-text\">\n                  {mealRecords[`${year}-${month.toString().padStart(2, \"0\")}-${selectedDate.toString().padStart(2, \"0\")}`].meal.join(\", \")}\n                </p>\n                <p className=\"calorie-data-text\">\n                  🔥 {mealRecords[`${year}-${month.toString().padStart(2, \"0\")}-${selectedDate.toString().padStart(2, \"0\")}`].calories} kcal\n                </p>\n              </>\n            ) : (\n              <p className=\"no-record-text\">기록 없음</p>\n            )}\n            <button className=\"eat\" onClick={navigateFood}>\n              <span className=\"eat_yellow_button\">What'd you have today?</span>\n            </button>\n          </div>\n        )}\n\n      </div>\n      {/* 기타 UI 구성 */}\n      <div className=\"Button-Container\">\n        <div className=\"Button-Item\">\n          <img src=\"/image/HOME.png\" alt=\"Main\" className=\"ButtonImage\" onClick={navigateMain} />\n          <span className=\"Span\">Main</span>\n        </div>\n\n        <div className=\"Button-Item\">\n          <img src=\"/image/PAPAR.png\" alt=\"Paper\" className=\"ButtonImage\" onClick={navigateToRecordBody} />\n          <span className=\"Span\">Paper</span>\n        </div>\n\n        <div className=\"Button-Item\">\n          <img src=\"/image/Vector7.png\" alt=\"rank\" className=\"ButtonImage\" onClick={navigateGraph} />\n          <span className=\"Span\">Graph</span>\n        </div>\n\n        <div className=\"Button-Item\">\n          <img src=\"/image/Vector8.png\" alt=\"Food\" className=\"ButtonImage\" onClick={thisPage}/>\n          <span className=\"Span\">Food</span>\n        </div>\n\n        <div className=\"Button-Item\">\n          <img src=\"/image/PEOPLE.png\" alt=\"Logout\" className=\"ButtonImage\" onClick={handleLogout} />\n          <span className=\"Span\">Logout</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MealCalendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}