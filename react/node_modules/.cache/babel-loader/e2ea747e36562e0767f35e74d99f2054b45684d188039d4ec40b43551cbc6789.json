{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\root\\\\Documents\\\\GitHub\\\\fit-end-main\\\\fit_end_deploy_2\\\\react\\\\src\\\\Component\\\\ApiHandlerPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport config from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiHandlerPage = () => {\n  _s();\n  const [apiData, setApiData] = useState(null);\n  const useridRef = useRef(sessionStorage.getItem(\"userid\"));\n\n  // 컴포넌트 마운트 시 API 데이터를 fetch합니다.\n  useEffect(() => {\n    async function fetchApiData() {\n      try {\n        const response = await fetch(`http://${config.SERVER_URL}/api/data?pageNo=1&numOfRows=10&foodNm=`, {\n          method: \"GET\",\n          credentials: \"include\" // httpOnly 쿠키를 자동으로 포함시킴\n        });\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setApiData(data);\n        console.log(\"Fetched API data:\", data);\n      } catch (error) {\n        console.error(\"Error fetching API data:\", error);\n      }\n    }\n    fetchApiData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Main Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome to the main screen!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Logged in as: \", useridRef.current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"API Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: apiData ? JSON.stringify(apiData, null, 2) : \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ApiHandlerPage, \"A2VkZJ3ctsrr48Hdisc4ryiYuSc=\");\n_c = ApiHandlerPage;\nexport default ApiHandlerPage;\nvar _c;\n$RefreshReg$(_c, \"ApiHandlerPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","config","jsxDEV","_jsxDEV","ApiHandlerPage","_s","apiData","setApiData","useridRef","sessionStorage","getItem","fetchApiData","response","fetch","SERVER_URL","method","credentials","ok","Error","data","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","current","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/root/Documents/GitHub/fit-end-main/fit_end_deploy_2/react/src/Component/ApiHandlerPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport config from \"../config\";\r\n\r\nconst ApiHandlerPage = () => {\r\n  const [apiData, setApiData] = useState(null);\r\n  const useridRef = useRef(sessionStorage.getItem(\"userid\"));\r\n\r\n  // 컴포넌트 마운트 시 API 데이터를 fetch합니다.\r\n  useEffect(() => {\r\n    async function fetchApiData() {\r\n      try {\r\n        const response = await fetch(\r\n          `http://${config.SERVER_URL}/api/data?pageNo=1&numOfRows=10&foodNm=`,\r\n          {\r\n            method: \"GET\",\r\n            credentials: \"include\", // httpOnly 쿠키를 자동으로 포함시킴\r\n          }\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        const data = await response.json();\r\n        setApiData(data);\r\n        console.log(\"Fetched API data:\", data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching API data:\", error);\r\n      }\r\n    }\r\n    fetchApiData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Main Screen</h2>\r\n      <p>Welcome to the main screen!</p>\r\n      <p>Logged in as: {useridRef.current}</p>\r\n      <div>\r\n        <h3>API Data:</h3>\r\n        <pre>{apiData ? JSON.stringify(apiData, null, 2) : \"Loading...\"}</pre>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApiHandlerPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMU,SAAS,GAAGR,MAAM,CAACS,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;;EAE1D;EACAX,SAAS,CAAC,MAAM;IACd,eAAeY,YAAYA,CAAA,EAAG;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,UAAUZ,MAAM,CAACa,UAAU,yCAAyC,EACpE;UACEC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE,SAAS,CAAE;QAC1B,CACF,CAAC;QACD,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCb,UAAU,CAACY,IAAI,CAAC;QAChBE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC;MACxC,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF;IACAZ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBzB,OAAA;MAAAqB,QAAA,EAAG;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClCzB,OAAA;MAAAqB,QAAA,GAAG,gBAAc,EAAChB,SAAS,CAACqB,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCzB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBzB,OAAA;QAAAqB,QAAA,EAAMlB,OAAO,GAAGwB,IAAI,CAACC,SAAS,CAACzB,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG;MAAY;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CAvCID,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AAyCpB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}