{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\fit-end\\\\fitend\\\\fit_end_deploy\\\\react\\\\src\\\\Component\\\\MealCalender.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport styles from \"../Style/MealCalender.module.css\"; // Import module CSS\nimport config from \"../config\";\nimport { FaCalendarAlt } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealCalendar = ({\n  mealData = []\n}) => {\n  _s();\n  // ✅ mealData 기본값을 빈 배열로 설정\n  const navigate = useNavigate();\n  const [userid, setUserid] = useState(\"\");\n  const [year, setYear] = useState(2025);\n  const [month, setMonth] = useState(3);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [mealRecords, setMealRecords] = useState({}); // ✅ 정리된 데이터 저장\n\n  // 📌 월의 시작 요일을 월요일(0)부터 시작하도록 조정\n  const rawStartDay = new Date(year, month - 1, 1).getDay();\n  const startDay = rawStartDay === 0 ? 6 : rawStartDay - 1; // 0(일요일) → 6, 그 외는 -1 적용\n\n  const navigateMain = () => {\n    navigate(\"/main\");\n  };\n  const navigateToRecordBody = () => {\n    navigate(\"/recodbody\");\n  };\n  const navigateFood = () => {\n    navigate(\"/MealTimingselect\");\n  };\n  const navigateGraph = () => {\n    navigate(\"/Graph\");\n  };\n  const handleLogout = async () => {\n    await fetch(`http://${config.SERVER_URL}/login/logout`, {\n      method: \"POST\",\n      credentials: \"include\"\n    });\n    sessionStorage.removeItem(\"useridRef\");\n    navigate(\"/login\");\n  };\n\n  // 📅 날짜 포맷 변환 함수\n  const formatDate = date => {\n    return new Date(date.getTime() - date.getTimezoneOffset() * 60000).toISOString().split(\"T\")[0];\n  };\n  useEffect(() => {\n    if (!Array.isArray(mealRecords)) {\n      // console.warn(\"mealData가 배열이 아닙니다!\", mealRecords);\n      return;\n    }\n    const formattedData = mealRecords.reduce((acc, record) => {\n      const dateKey = formatDate(new Date(record.timestamp));\n      if (!acc[dateKey]) {\n        acc[dateKey] = {\n          enerc: 0,\n          meal: []\n        };\n      }\n      acc[dateKey].enerc += record.enerc;\n      acc[dateKey].meal.push(record.dietMemo);\n      return acc;\n    }, {});\n    // ✅ 기존 데이터와 다를 경우에만 업데이트\n    if (JSON.stringify(mealRecords) !== JSON.stringify(formattedData)) {\n      setMealRecords(formattedData);\n    }\n  }, [mealRecords, mealData]);\n  useEffect(() => {\n    // setSelectedDate(getTodayDate()); // 오늘 날짜로 기본 설정\n\n    fetch(`http://${config.SERVER_URL}/login/validate`, {\n      method: \"GET\",\n      credentials: \"include\"\n    }).then(response => {\n      if (!response.ok) throw new Error(\"Unauthorized\");\n      return response.json();\n    }).then(data => {\n      console.log(\"로그인 상태 확인 성공:\", data);\n      setUserid(data.userid);\n      return fetch(`http://${config.SERVER_URL}/food/diet-records/${data.userid}`, {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    }).then(response => {\n      if (!response.ok) throw new Error(\"서버 응답 실패\");\n      return response.json();\n    }).then(data => {\n      console.log(\"받은 데이터:\", data);\n      setMealRecords(data);\n      // console.log(\"MealRecords:\", mealRecords);\n    }).catch(error => {\n      console.warn(\"인증 실패 또는 데이터 불러오기 실패:\", error);\n      navigate(\"/login\");\n    });\n  }, [navigate]);\n\n  // const isSelected = selectedDate === day;\n\n  const handleDateClick = day => {\n    setSelectedDate(day); // ✅ 날짜 객체가 아니라 숫자로 저장\n  };\n  // ✅ 현재 월의 총 일 수 가져오기\n  const daysInMonth = new Date(year, month, 0).getDate();\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const changeMonth = offset => {\n    let newMonth = month + offset;\n    let newYear = year;\n    if (newMonth < 1) {\n      newMonth = 12;\n      newYear--;\n    } else if (newMonth > 12) {\n      newMonth = 1;\n      newYear++;\n    }\n\n    // ✅ 변경되지 않은 경우 `setState` 실행 방지\n    if (newMonth !== month || newYear !== year) {\n      setYear(newYear);\n      setMonth(newMonth);\n      setSelectedDate(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.MealCalender_Container,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/image/black.png\",\n      alt: \"Background\",\n      className: styles.MealCalender_image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      className: styles.MealCalender_title,\n      children: \"FitEnd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.meal_calendar,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.calendar_header,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeMonth(-1),\n          children: \"\\u27EA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [monthNames[month - 1], \" \", year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeMonth(1),\n          children: \"\\u27EB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.weekdays,\n        children: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.calendar_days,\n        children: Array.from({\n          length: daysInMonth + startDay\n        }).map((_, index) => {\n          const day = index - startDay + 1;\n          const dateKey = `${year}-${month.toString().padStart(2, \"0\")}-${day.toString().padStart(2, \"0\")}`;\n          const isSelected = selectedDate === day;\n          const hasData = mealRecords[dateKey];\n          return index < startDay ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.empty_day\n          }, `empty-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this) // 빈 칸 추가\n          : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDateClick(day),\n            className: `${styles.calendar_day} ${isSelected ? styles.selected : \"\"} ${hasData ? styles.hasData : \"\"}`,\n            children: day\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 16\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), selectedDate && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.selected_date_container,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.selected_date_text,\n          children: [year, \"\\uB144 \", month, \"\\uC6D4 \", selectedDate, \"\\uC77C \\uC120\\uD0DD\\uB428\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this), mealRecords[`${year}-${month.toString().padStart(2, \"0\")}-${selectedDate.toString().padStart(2, \"0\")}`] ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.meal_data_container,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.meal_data_text,\n            children: mealRecords[`${year}-${month.toString().padStart(2, \"0\")}-${selectedDate.toString().padStart(2, \"0\")}`].meal.join(\", \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.meal_data_text,\n            children: [\"\\uD83D\\uDD25 \", mealRecords[`${year}-${month.toString().padStart(2, \"0\")}-${selectedDate.toString().padStart(2, \"0\")}`].enerc, \" kcal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.no_record_text,\n          children: \"\\uAE30\\uB85D \\uC5C6\\uC74C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttonContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonItem,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/HOME.png\",\n          alt: \"Main\",\n          className: styles.buttonImage,\n          onClick: navigateMain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.span,\n          children: \"Main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonItem,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/PAPAR.png\",\n          alt: \"Paper\",\n          className: styles.buttonImage,\n          onClick: navigateToRecordBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.span,\n          children: \"Paper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonItem,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/Vector7.png\",\n          alt: \"rank\",\n          className: styles.buttonImage,\n          onClick: navigateGraph\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.span,\n          children: \"Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonItem,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/Vector8.png\",\n          alt: \"Food\",\n          className: styles.buttonImage,\n          onClick: navigateFood\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.span,\n          children: \"Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonItem,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/PEOPLE.png\",\n          alt: \"Logout\",\n          className: styles.buttonImage,\n          onClick: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.span,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(MealCalendar, \"Q8tdslxUyw/ySKGGWgGYv2LFexs=\", false, function () {\n  return [useNavigate];\n});\n_c = MealCalendar;\nexport default MealCalendar;\nvar _c;\n$RefreshReg$(_c, \"MealCalendar\");","map":{"version":3,"names":["useState","useEffect","useNavigate","styles","config","FaCalendarAlt","jsxDEV","_jsxDEV","MealCalendar","mealData","_s","navigate","userid","setUserid","year","setYear","month","setMonth","selectedDate","setSelectedDate","mealRecords","setMealRecords","rawStartDay","Date","getDay","startDay","navigateMain","navigateToRecordBody","navigateFood","navigateGraph","handleLogout","fetch","SERVER_URL","method","credentials","sessionStorage","removeItem","formatDate","date","getTime","getTimezoneOffset","toISOString","split","Array","isArray","formattedData","reduce","acc","record","dateKey","timestamp","enerc","meal","push","dietMemo","JSON","stringify","then","response","ok","Error","json","data","console","log","headers","catch","error","warn","handleDateClick","day","daysInMonth","getDate","monthNames","changeMonth","offset","newMonth","newYear","className","MealCalender_Container","children","src","alt","MealCalender_image","fileName","_jsxFileName","lineNumber","columnNumber","MealCalender_title","meal_calendar","calendar_header","onClick","weekdays","map","calendar_days","from","length","_","index","toString","padStart","isSelected","hasData","empty_day","calendar_day","selected","selected_date_container","selected_date_text","meal_data_container","meal_data_text","join","no_record_text","buttonContainer","buttonItem","buttonImage","span","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/fit-end/fitend/fit_end_deploy/react/src/Component/MealCalender.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from \"../Style/MealCalender.module.css\"; // Import module CSS\r\nimport config from \"../config\";\r\nimport { FaCalendarAlt } from \"react-icons/fa\";\r\n\r\nconst MealCalendar = ({ mealData = [] }) => { // ✅ mealData 기본값을 빈 배열로 설정\r\n  const navigate = useNavigate();\r\n  const [userid, setUserid] = useState(\"\");\r\n  const [year, setYear] = useState(2025);\r\n  const [month, setMonth] = useState(3);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [mealRecords, setMealRecords] = useState({}); // ✅ 정리된 데이터 저장\r\n\r\n  // 📌 월의 시작 요일을 월요일(0)부터 시작하도록 조정\r\n  const rawStartDay = new Date(year, month - 1, 1).getDay();\r\n  const startDay = (rawStartDay === 0 ? 6 : rawStartDay - 1); // 0(일요일) → 6, 그 외는 -1 적용\r\n\r\n  \r\n  const navigateMain = () => {navigate(\"/main\");};\r\n\r\n  const navigateToRecordBody = () => {navigate(\"/recodbody\");};\r\n\r\n  const navigateFood=() => {navigate(\"/MealTimingselect\");};\r\n\r\n  const navigateGraph = () => {navigate(\"/Graph\")};\r\n\r\n  const handleLogout = async () => {\r\n    await fetch(`http://${config.SERVER_URL}/login/logout`, {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n    });\r\n    sessionStorage.removeItem(\"useridRef\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  // 📅 날짜 포맷 변환 함수\r\n  const formatDate = (date) => {\r\n    return new Date(date.getTime() - date.getTimezoneOffset() * 60000)\r\n      .toISOString()\r\n      .split(\"T\")[0];\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!Array.isArray(mealRecords)) {\r\n      // console.warn(\"mealData가 배열이 아닙니다!\", mealRecords);\r\n      return;\r\n    }\r\n  \r\n    const formattedData = mealRecords.reduce((acc, record) => {\r\n      const dateKey = formatDate(new Date(record.timestamp));\r\n  \r\n      if (!acc[dateKey]) {\r\n        acc[dateKey] = { enerc: 0, meal: [] };\r\n      }\r\n  \r\n      acc[dateKey].enerc += record.enerc;\r\n      acc[dateKey].meal.push(record.dietMemo);\r\n      return acc;\r\n    }, {});\r\n    // ✅ 기존 데이터와 다를 경우에만 업데이트\r\n    if (JSON.stringify(mealRecords) !== JSON.stringify(formattedData)) {\r\n      setMealRecords(formattedData);\r\n    }\r\n  }, [mealRecords, mealData]);\r\n\r\n  useEffect(() => {\r\n    // setSelectedDate(getTodayDate()); // 오늘 날짜로 기본 설정\r\n\r\n    fetch(`http://${config.SERVER_URL}/login/validate`, {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(\"Unauthorized\");\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(\"로그인 상태 확인 성공:\", data);\r\n        setUserid(data.userid);\r\n\r\n        return fetch(`http://${config.SERVER_URL}/food/diet-records/${data.userid}`, {\r\n          method: \"GET\",\r\n          credentials: \"include\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        });\r\n      })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(\"서버 응답 실패\");\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(\"받은 데이터:\", data);\r\n        setMealRecords(data);\r\n        // console.log(\"MealRecords:\", mealRecords);\r\n      })\r\n      .catch((error) => {\r\n        console.warn(\"인증 실패 또는 데이터 불러오기 실패:\", error);\r\n        navigate(\"/login\");\r\n      });\r\n  }, [navigate]);\r\n\r\n\r\n  // const isSelected = selectedDate === day;\r\n\r\n  const handleDateClick = (day) => {\r\n    setSelectedDate(day); // ✅ 날짜 객체가 아니라 숫자로 저장\r\n  };  \r\n  // ✅ 현재 월의 총 일 수 가져오기\r\n  const daysInMonth = new Date(year, month, 0).getDate();\r\n\r\n  const monthNames = [\r\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n  \r\n  const changeMonth = (offset) => {\r\n    let newMonth = month + offset;\r\n    let newYear = year;\r\n  \r\n    if (newMonth < 1) {\r\n      newMonth = 12;\r\n      newYear--;\r\n    } else if (newMonth > 12) {\r\n      newMonth = 1;\r\n      newYear++;\r\n    }\r\n  \r\n    // ✅ 변경되지 않은 경우 `setState` 실행 방지\r\n    if (newMonth !== month || newYear !== year) {\r\n      setYear(newYear);\r\n      setMonth(newMonth);\r\n      setSelectedDate(null);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className={styles.MealCalender_Container}>\r\n      <img src=\"/image/black.png\" alt=\"Background\" className={styles.MealCalender_image} />\r\n      <a className={styles.MealCalender_title}>FitEnd</a>\r\n      <div className={styles.meal_calendar}>\r\n       {/* 📌 월 변경 헤더 */}\r\n      <div className={styles.calendar_header}>\r\n        <button onClick={() => changeMonth(-1)}>⟪</button>\r\n        <h2>{monthNames[month - 1]} {year}</h2> {/* ✅ 숫자 → 영어로 변경 */}\r\n        <button onClick={() => changeMonth(1)}>⟫</button>\r\n      </div>\r\n\r\n\r\n        {/* 요일 헤더 */}\r\n        <div className={styles.weekdays}>\r\n          {[\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"].map((day) => (\r\n            <div key={day}>{day}</div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* 날짜 표시 */}\r\n        <div className={styles.calendar_days}>\r\n          {Array.from({ length: daysInMonth + startDay }).map((_, index) => {\r\n            const day = index - startDay + 1;\r\n            const dateKey = `${year}-${month.toString().padStart(2, \"0\")}-${day.toString().padStart(2, \"0\")}`;\r\n            const isSelected = selectedDate === day;\r\n            const hasData = mealRecords[dateKey];\r\n            \r\n            return index < startDay ? (\r\n              <div key={`empty-${index}`} className={styles.empty_day}></div> // 빈 칸 추가\r\n            ) : (\r\n               <button\r\n                key={day}\r\n                onClick={() => handleDateClick(day)}\r\n                className={`${styles.calendar_day} ${isSelected ? styles.selected : \"\"} ${hasData ? styles.hasData : \"\"}`}\r\n              >\r\n                {day}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {selectedDate && (\r\n            <div className={styles.selected_date_container}>\r\n              <p className={styles.selected_date_text}>{year}년 {month}월 {selectedDate}일 선택됨</p>\r\n              {/* 🔥 Debugging logs */}\r\n              {/* {console.log(\"밀레코드:\", mealRecords)}\r\n              {console.log(\"체킹 데이트 키:\", `${year}-${month.toString().padStart(2, \"0\")}-${selectedDate.toString().padStart(2, \"0\")}`)} */}\r\n\r\n              {/* 🔥 해당 날짜에 데이터가 존재하는지 확인 */}\r\n              {mealRecords[`${year}-${month.toString().padStart(2, \"0\")}-${selectedDate.toString().padStart(2, \"0\")}`] ? (\r\n                <div className={styles.meal_data_container}>\r\n                  <p className={styles.meal_data_text}>\r\n                    {mealRecords[`${year}-${month.toString().padStart(2, \"0\")}-${selectedDate.toString().padStart(2, \"0\")}`].meal.join(\", \")}\r\n                  </p>\r\n                  <p className={styles.meal_data_text}>\r\n                    🔥 {mealRecords[`${year}-${month.toString().padStart(2, \"0\")}-${selectedDate.toString().padStart(2, \"0\")}`].enerc} kcal\r\n                  </p>\r\n                </div>\r\n              ) : (\r\n                <p className={styles.no_record_text}>기록 없음</p>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n      </div>\r\n      {/* 기타 UI 구성 */}\r\n      <div className={styles.buttonContainer}>\r\n          <div className={styles.buttonItem}>\r\n              <img src=\"/image/HOME.png\" alt=\"Main\" className={styles.buttonImage} onClick={navigateMain} />\r\n              <span className={styles.span}>Main</span>\r\n          </div>\r\n\r\n          <div className={styles.buttonItem}>\r\n              <img src=\"/image/PAPAR.png\" alt=\"Paper\" className={styles.buttonImage} onClick={navigateToRecordBody} />\r\n              <span className={styles.span}>Paper</span>\r\n          </div>\r\n\r\n          <div className={styles.buttonItem}>\r\n              <img src=\"/image/Vector7.png\" alt=\"rank\" className={styles.buttonImage} onClick={navigateGraph} />\r\n              <span className={styles.span}>Graph</span>\r\n          </div>\r\n\r\n          <div className={styles.buttonItem}>\r\n              <img src=\"/image/Vector8.png\" alt=\"Food\" className={styles.buttonImage} onClick={navigateFood} />\r\n              <span className={styles.span}>Food</span>\r\n          </div>\r\n\r\n          <div className={styles.buttonItem}>\r\n              <img src=\"/image/PEOPLE.png\" alt=\"Logout\" className={styles.buttonImage} onClick={handleLogout} />\r\n              <span className={styles.span}>Logout</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MealCalendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}